{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const delayInput = document.querySelector('input[name=\"delay\"]');\n  const stateInput = document.querySelector('input[name=\"state\"]:checked');\n\n  const delay = parseInt(delayInput.value, 10);\n\n  delayInput.value = '';\n\n  if (isNaN(delay) || delay <= 0) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Delay must be a positive number',\n    });\n    return;\n  }\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (stateInput.value === 'fulfilled') {\n        resolve(delay);\n      } else {\n        reject(delay);\n      }\n    }, delay);\n  });\n\n  promise.then(delay => {\n    iziToast.success({\n      title: 'Success',\n      message: `✅ Fulfilled promise in ${delay}ms`,\n    });\n  }).catch(delay => {\n    iziToast.error({\n      title: 'Error',\n      message: `❌ Rejected promise in ${delay}ms`,\n    });\n  });\n});\n"],"names":["form","event","delayInput","stateInput","delay","iziToast","resolve","reject"],"mappings":"oGAGA,MAAMA,EAAO,SAAS,cAAc,OAAO,EAE3CA,EAAK,iBAAiB,SAAUC,GAAS,CACvCA,EAAM,eAAc,EAEpB,MAAMC,EAAa,SAAS,cAAc,qBAAqB,EACzDC,EAAa,SAAS,cAAc,6BAA6B,EAEjEC,EAAQ,SAASF,EAAW,MAAO,EAAE,EAI3C,GAFAA,EAAW,MAAQ,GAEf,MAAME,CAAK,GAAKA,GAAS,EAAG,CAC9BC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,iCACf,CAAK,EACD,MACD,CAEe,IAAI,QAAQ,CAACC,EAASC,IAAW,CAC/C,WAAW,IAAM,CACXJ,EAAW,QAAU,YACvBG,EAAQF,CAAK,EAEbG,EAAOH,CAAK,CAEf,EAAEA,CAAK,CACZ,CAAG,EAEO,KAAKA,GAAS,CACpBC,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,0BAA0BD,CAAK,IAC9C,CAAK,CACL,CAAG,EAAE,MAAMA,GAAS,CAChBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,yBAAyBD,CAAK,IAC7C,CAAK,CACL,CAAG,CACH,CAAC"}